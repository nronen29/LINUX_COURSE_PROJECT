###I'm not sure why the 'clear history' command didnâ€™t work, 
so we ended up deleting the irrelevant history manually.###
  436  git init
  437  ls -a
  438  mkdir -p LINUX_COURSE_PROJECT/DOWNLOADS LINUX_COURSE_PROJECT/CODE LINUX_COURSE_PROJECT/DATA LINUX_COURSE_PROJECT/BACKUPS LINUX_COURSE_PROJECT/Work/Q1 LINUX_COURSE_PROJECT/Work/Q2 LINUX_COURSE_PROJECT/Work/Q3 LINUX_COURSE_PROJECT/Work/Q4
  439  ls -R LINUX_COURSE_PROJECT
  440  cd LINUX_COURSE_PROJECT/
  441  code .
  442  tar -xzvf downloads.tar.gz -C DOWNLOADS
  443  pwd
  444  rm downloads.tar.gz 
  445  git branch 
  446  git status 
  447  git branch BR_Q1
  448  git add .
  449  git status 
  450  git commit -m "Initial commit"
  451  git checkout -b BR_Q1
  452  git branch 
  453  cp DOWNLOADS/*.py CODE/ 
  454  cp DOWNLOADS/*.py CODE 
  455  cp ~/LINUX_COURSE_PROJECT/DOWNLOADS/*.py CODE 
  456  cd DOWNLOADS/
  457  cp *.py ~/LINUX_COURSE_PROJECT/CODE/
  458  ls /*.py
  459  ls *py
  460  ls * py
  461  ls *.py
  462  ls /*.py
  463  ls
  464  cp LINUX_COURSE_WORK-downloads/*.py ~/LINUX_COURSE_PROJECT/CODE/ 
  465  #cp LINUX_COURSE_WORK-downloads/*. ~/LINUX_COURSE_PROJECT/CODE/ 
  466  cp LINUX_COURSE_WORK-downloads/*.{csv,jpg,txt} ~/LINUX_COURSE_PROJECT/CODE/
  467  rm ~/LINUX_COURSE_PROJECT/CODE/*.{csv,jpg,txt}
  468  cp LINUX_COURSE_WORK-downloads/*.{csv,jpg,txt} ~/LINUX_COURSE_PROJECT/DATA/
  469  
  470  rm q1_output.txt 
  471  ls . 
  472  ls ..
  473  touch ../Work/Q1/q1_output.txt 
  474  cd ../Work/Q1
  475  echo "Time: $(date)" > q1_output.txt 
  476  echo "USER DETAILS: $(grep $(whoami) /etc/passwd)" >> filename.txt
  477  echo "USER DETAILS: $(grep $(whoami) /etc/passwd)" >> q1_output.txt
  478  whoami
  479  pd
  480  pwd
  481  echo "REOP: $(pwd)" >> q1_output.txt
  482  git remote -v
  483  cd ..
  484  git remote -v
  485  pwd
  486  git remote add origin https://github.com/nronen29/LINUX_COURSE_PROJECT.git
  487  ll
  488  la
  489  cd Work/Q1
  490  echo "GithubUrl: https://github.com/nronen29/LINUX_COURSE_PROJECT.git" >> q1_output.txt 
  491  ll
  492  la
  493  echo "GithubUrl: https://github.com/nronen29/LINUX_COURSE_PROJECT.git" >> q1_output.txt 
  494  grep '^VERSION_ID' /etc/os-release | cut -d '=' -f2 | tr -d '"' > q1_output.txt
  495  grep '^VERSION_ID' /etc/os-release | cut -d '=' -f2 | tr -d '"' >> q1_output.txt
  496  echo "j" >> q1_output.txt
  497* 

  498  echo "VERSION_ID: $(awk -F= '/^VERSION_ID/{gsub(/"/, "", $2); print $2}' /etc/os-release)" >> q1_output.txt
  499  la
  500  echo "VERSIONID: $(awk -F= '/^VERSION_ID/{gsub(/"/, "", $2); print $2}' /etc/os-release)" >> q1_output.txt
  501  echo jj >> q1_output.txt
  502  echo "jj" >> q1_output.txt
  503  echo "_______________________________________________" >> q1_output.txt
  504  echo "GithubUrl: https://github.com/nronen29/LINUX_COURSE_PROJECT.git" >> q1_output.txt 
  505  echo "Time: $(date)" > q1_output.txt 
  506  echo "USER DETAILS: $(grep $(whoami) /etc/passwd)" >> q1_output.txt
  507  echo "REOP: $(pwd)" >> q1_output.txt
  508  echo "GithubUrl: https://github.com/nronen29/LINUX_COURSE_PROJECT.git" >> q1_output.txt 
  509  echo "VERSIONID: $(awk -F= '/^VERSION_ID/{gsub(/"/, "", $2); print $2}' /etc/os-release)" >> q1_output.txt
  510  echo ________________ >> q1_output.txt 
  511  echo " ________________ ">> q1_output.txt 
  512  echo "Time: $(date)" > q1_output.txt 
  513  echo "USER DETAILS: $(grep $(whoami) /etc/passwd)" >> q1_output.txt
  514  echo "REOP: $(pwd)" >> q1_output.txt
  515  echo "GithubUrl: https://github.com/nronen29/LINUX_COURSE_PROJECT.git" >> q1_output.txt 
  516  echo "____________________"  >> q1_output.txt 
  517  echo "--------------------------------------------"  >> q1_output.txt 
  518  sudo apt update
  519  sudo apt install tree
  520  echo "VERSIONID: $(awk -F= '/^VERSION_ID/{gsub(/"/, "", $2); print $2}' /etc/os-release)" >> q1_output.txt
  521  echo "---------------------------------------------------------------"  >> q1_output.txt 
  522  tree ~/LINUX_COURSE_PROJECT/
  523  tree ~/LINUX_COURSE_PROJECT/ >> q1_output.txt 
  524  echo 
  525  tree /path/to/repository >> q1_output.txt
  526  echo "--------------------" >> q1_output.txt 
  527  echo "" >> q1_output.txt 
  528  find ~ -type f -name "*.sh" >> q1_output.txt
  529  cd ..
  530  add .
  531  git add .
  532  git commit -m "first question commit"
  533  git checkout main
  534  git checkout master 
  535  git merge BR_Q1 
  536  git log
  537  touch git_commits.log
  538  git log >> git_commits.log
  539  touch Work/Q1/history.txt 
  540  history >> Work/Q1/history.txt 
